import React, { useState, useEffect } from "react";
import axios from "axios";
import { Button, TextField, Box } from "@mui/material";

const CategoryCrud = () => {
  const [category, setCategory] = useState({
    id: "",
    categoryName: "",
  });
  const [categories, setCategories] = useState([]);

  // API URL (replace with your own endpoint)
  const API_URL = "https://api.example.com/categories";

  // GET Request - Fetch all categories
  const fetchCategories = async () => {
    try {
      const response = await axios.get(API_URL);
      setCategories(response.data);
      console.log("Categories fetched: ", response.data);
    } catch (error) {
      console.error("Error fetching categories: ", error);
    }
  };

  // POST Request - Add a new category
  const addCategory = async () => {
    try {
      const response = await axios.post(API_URL, { categoryName: category.categoryName });
      setCategories([...categories, response.data]);
      console.log("Category added: ", response.data);
    } catch (error) {
      console.error("Error adding category: ", error);
    }
  };

  // PUT Request - Update a category by ID
  const updateCategory = async () => {
    try {
      const response = await axios.put(`${API_URL}/${category.id}`, { categoryName: category.categoryName });
      const updatedCategories = categories.map((cat) =>
        cat.id === category.id ? response.data : cat
      );
      setCategories(updatedCategories);
      console.log("Category updated: ", response.data);
    } catch (error) {
      console.error("Error updating category: ", error);
    }
  };

  // DELETE Request - Delete a category by ID
  const deleteCategory = async () => {
    try {
      await axios.delete(`${API_URL}/${category.id}`);
      const remainingCategories = categories.filter((cat) => cat.id !== category.id);
      setCategories(remainingCategories);
      console.log("Category deleted: ", category.id);
    } catch (error) {
      console.error("Error deleting category: ", error);
    }
  };

  // Handle input change
  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setCategory({ ...category, [name]: value });
  };

  // Fetch categories on component mount
  useEffect(() => {
    fetchCategories();
  }, []);

  return (
    <Box sx={{ padding: 4 }}>
      <h2>Category Management</h2>

      <TextField
        label="Category ID (for Update/Delete)"
        name="id"
        value={category.id}
        onChange={handleInputChange}
        style={{ marginBottom: "20px" }}
      />
      <br />
      <TextField
        label="Category Name"
        name="categoryName"
        value={category.categoryName}
        onChange={handleInputChange}
        style={{ marginBottom: "20px" }}
      />
      <br />

      <Button variant="contained" onClick={addCategory} sx={{ marginRight: 2 }}>
        Add Category (POST)
      </Button>
      <Button variant="contained" onClick={fetchCategories} sx={{ marginRight: 2 }}>
        Fetch Categories (GET)
      </Button>
      <Button variant="contained" onClick={updateCategory} sx={{ marginRight: 2 }}>
        Update Category (PUT)
      </Button>
      <Button variant="contained" onClick={deleteCategory} sx={{ marginRight: 2 }}>
        Delete Category (DELETE)
      </Button>

      <h3>All Categories</h3>
      <ul>
        {categories.map((cat) => (
          <li key={cat.id}>
            {cat.id}: {cat.categoryName}
          </li>
        ))}
      </ul>
    </Box>
  );
};

export default CategoryCrud;
