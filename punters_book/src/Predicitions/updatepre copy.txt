import * as React from "react";
import SideNavbar from "../SideNavbar/sidenavbar";
import Box from "@mui/material/Box";
import { useFormik } from "formik";
import { useState, useEffect } from "react";
import { Autocomplete, TextField } from "@mui/material";
import { Button } from "@mui/material";
import { FormControl, InputLabel, MenuItem, Select } from "@mui/material";
import { Formik, Form, Field } from "formik";
import FormControlLabel from "@mui/material/FormControlLabel";
import Checkbox from "@mui/material/Checkbox";
import { useNavigate } from "react-router-dom";
import { useLocation } from "react-router-dom";

const UpdateBet = () => {
  const location = useLocation();
  const singlePrediction = location.state;
  console.log("singlePrediction:", singlePrediction);
  const navigate = useNavigate();

  const {
    handleChange,
    handleBlur,
    handleSubmit,
    isSubmitting,
    values,
    touched,
    errors,
    isValid,
    setValues,
    resetForm,
  } = useFormik({
    initialValues: {
      rating: "",
      is_free: "",
      is_tranding: "",
      prediction_value: "",
      team1_prediction: "",
      team2_predicition: "",
      team1_score: "",
      team2_score: "",
      reason: "",
      onChangeOdds: "",
      result: "",
      predicition_id: "",
    },

    // onSubmit: (values) => {
    //   {
    //     submitHandler(values);
    //   }
    // },

    // validationSchema: PanNumberSchema,

    validate: (values) => {
      const errors = {};
      return errors;
    },
  });

  useEffect(() => {
    if (singlePrediction) {
      const timer = setTimeout(() => {
        console.log(singlePrediction.rating);
        setValues({
          ...values,
          rating: `${singlePrediction.rating}`,
          is_free: `${singlePrediction.is_free}`,
          is_tranding: `${singlePrediction.is_tranding}`,
          prediction_value: `${singlePrediction.prediction_value}`,
          team1_prediction: `${singlePrediction.team1_prediction}`,
          team2_predicition: `${singlePrediction.team2_predicition}`,
          team1_score: `${singlePrediction.team1_score}`,
          team2_score: `${singlePrediction.team2_score}`,
          reason: `${singlePrediction.reason}`,
          onChangeOdds: `${singlePrediction.odds}`,
          result: `${singlePrediction.result}`,
          predicition_id: `${singlePrediction.id}`,
        });
      }, 500);
      return () => clearTimeout(timer);
    }
  }, [singlePrediction]);
  return (
    <article>
      <SideNavbar />
      <Box sx={{ width: "100%", paddingLeft: 40, paddingTop: 10 }}>
        <div className="inputs px-3">
          <div class="container text-center ">
            <div class="row">
              <div class="col">
                <h4>Update Prediction for Perth Scorchers Winner </h4>
              </div>
            </div>
          </div>
       
              <Form>
                <div class="container text-center ">
                  <div class="row">
                    <div class="col">
                      <label className="float-start">Rating:</label>
                      {values.rating}
                      <TextField
                        fullWidth
                        type="text"
                        // value={values.rating}
                        name="rating"
                        defaudefaultValue="Hello World"
                        as={TextField}
                        id="fullWidth"
                        // onChange={handleChange}
                        onBlur={handleBlur}
                        // error={touched.leagueName && !!errors.leagueName}
                        // helperText={touched.leagueName && errors.leagueName}
                      />
                    </div>
                    <div class="col">
                      <FormControlLabel
                        control={
                          <Checkbox
                            // checked={values.is_free === "true"}
                            onChange={() =>
                              setFieldValue(
                                "is_free",
                                values.is_free === "true" ? "false" : "true"
                              )
                            }
                          />
                        }
                        label="isFree"
                      />
                    </div>
                    <div className="col">
                      <FormControlLabel
                        control={<Checkbox defaultChecked />}
                        label="is Trending"
                      />
                    </div>
                    <div class="col">
                      <label className="float-start">Prediction Value: </label>
                      <TextField
                        fullWidth
                        type="text"
                        // value={values.prediction_value}
                        // name="leagueName"
                        as={TextField}
                        id="fullWidth"
                        // error={touched.leagueName && !!errors.leagueName}
                        // helperText={touched.leagueName && errors.leagueName}
                      />
                    </div>
                  </div>
                </div>
                <br></br>
                <div class="container text-center ">
                  <div class="row">
                    <div className="col">
                      <label className="float-start">
                        Team 1 Prediction :{" "}
                      </label>
                      <TextField
                        fullWidth
                        as={TextField}
                        // name="leagueName"
                        // id="fullWidth"
                        // error={touched.leagueName && !!errors.leagueName}
                        // helperText={touched.leagueName && errors.leagueName}
                      />
                    </div>
                    <div class="col">
                      <label className="float-start">
                        Team 2 Prediction :{" "}
                      </label>
                      <TextField
                        fullWidth
                        id="fullWidth"
                        // error={touched.betOdds && Boolean(errors.betOdds)}
                        // helperText={touched.betOdds && errors.betOdds}
                      />
                    </div>
                  </div>
                </div>
                <br></br>
                <div class="container text-center ">
                  <div class="row">
                    <div className="col">
                      <label className="float-start">Team 1 Score : </label>
                      <TextField
                        fullWidth
                        id="fullWidth"
                        // error={touched.betValue && Boolean(errors.betValue)}
                        // helperText={touched.betValue && errors.betValue}
                      />
                    </div>
                    <div className="col">
                      <label className="float-start">Team 2 Score : </label>
                      <TextField
                        fullWidth
                        id="fullWidth"
                        // error={touched.betValue && Boolean(errors.betValue)}
                        // helperText={touched.betValue && errors.betValue}
                      />
                    </div>
                  </div>
                  <br></br>
                  <div className="row">
                    <div className="col">
                      <label className="float-start">Odds Value : </label>
                      <TextField
                        fullWidth
                        id="fullWidth"
                        // error={touched.betValue && Boolean(errors.betValue)}
                        // helperText={touched.betValue && errors.betValue}
                      />
                    </div>
                    <div className="col">
                      <label className="float-start">Result: </label>
                      <FormControl sx={{ width: "100%" }}>
                        <InputLabel id="demo-simple-select-label" />
                        <Select
                          labelId="demo-simple-select-label"
                          id="demo-simple-select"
                        >
                          <MenuItem value="option3">No Result</MenuItem>
                          <MenuItem value="option1">Yes</MenuItem>
                          <MenuItem value="option2">No</MenuItem>
                        </Select>
                      </FormControl>
                    </div>
                  </div>
                  <div className="row">
                    <div className="col">
                      <label
                        for="exampleFormControlTextarea1"
                        className="form-label float-start"
                      >
                        Title:
                      </label>
                      <Field
                        className="form-control"
                        id="exampleFormControlTextarea1"
                        name="headlineTitle"
                        // onChange={handleChange}
                        as="textarea"
                        rows="3"
                        width="50%"
                        error={touched.headlineTitle && !!errors.headlineTitle}
                      />{" "}
                    </div>
                  </div>
                </div>
                <br></br>
                <div class="container text-center ">
                  <div class="row">
                    <div className="col">
                      <Button
                        variant="contained"
                        type="submit"
                        sx={{ textTransform: "none", fontSize: 15 }}
                      >
                        Save Prediction
                      </Button>
                    </div>
                    <div className="col">
                      <Button
                        variant="contained"
                        type="cancel"
                        sx={{
                          textTransform: "none",
                          fontSize: 15,
                          backgroundColor: "red",
                        }}
                        onClick={() => {
                          navigate("/predections/predectionslist");
                        }}
                      >
                        Cancel
                      </Button>
                    </div>
                  </div>
                </div>
              </Form>
     
          {/* ))
          ) : (
            <p> No bets to update.</p>
          )} */}
        </div>
      </Box>
    </article>
  );
};
export default UpdateBet;
